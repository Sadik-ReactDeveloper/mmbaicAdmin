{"version":3,"sources":["views/apps/freshlist/house/EditCity.js","views/apps/freshlist/house/EditProductType.js"],"names":["EditCity","city","selected","SelectedSupplierCity","sendDataToParent","useState","setSelectedCity","options","selectedValues","onSelect","selectedOption","console","log","onRemove","removedOption","displayValue","i","selectItem1","EditProductType","props","handlerStatus","e","target","value","setState","Status","changeHandler","name","changeHandlerRole","Role","changeHandler1","status","receiveDataFromChild","data","selectedcities","submitHandler","id","match","params","preventDefault","formdata","FormData","uniqueChars","Set","append","state","B_City","AssignRole","axiosConfig","post","then","response","swal","catch","error","handleMatchaddress","checkbox","S_Country","B_Country","S_State","B_State","S_City","S_Street","B_Street","S_PinCode","B_PinCode","Address","FirstName","Lastname","postalCode","UserName","Mobile_no","email","SelectedState","SelectedSCity","this","myArray","newdata","city_id","split","state_id","res","cities","filter","ele","includes","selectedValue","CityList","err","firstname","lastname","username","mobile","UserId","get","StateList","states","pageparmission","JSON","parse","localStorage","getItem","Userinfo","role","propertyNames","Object","values","roles","productName","selectedList","selectedItem","length","push","removedItem","Card","Row","className","Col","col-sm-6","render","history","Button","onClick","CardBody","Form","onSubmit","lg","md","FormGroup","Label","Input","required","type","placeholder","onChange","onKeyDown","key","min","maxLength","size","numericValue","replace","disabled","for","map","state_title","setuserList","CustomInput","index","sm","checked","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/332.4d8dc4c4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nexport const EditCity = ({\r\n  city,\r\n  selected,\r\n  SelectedSupplierCity,\r\n  sendDataToParent,\r\n}) => {\r\n  const [SelectedCity, setSelectedCity] = useState(\"\");\r\n  let citylist = city;\r\n  const onSelect = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelectedCity(selectedOption);\r\n    sendDataToParent(selectedOption);\r\n    // Implement your onSelect logic here\r\n    // You can update the selectedValues state or perform any other actions\r\n  };\r\n\r\n  const onRemove = (removedOption) => {\r\n    console.log(removedOption);\r\n    setSelectedCity(removedOption);\r\n    sendDataToParent(removedOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Multiselect\r\n        options={city} // Options to display in the dropdown\r\n        selectedValues={selected || SelectedSupplierCity} // Preselected value to persist in dropdown\r\n        onSelect={onSelect} // Function will trigger on select event\r\n        onRemove={onRemove} // Function will trigger on remove event\r\n        displayValue=\"name\" // Property name to display in the dropdown options\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { EditCity } from \"./EditCity\";\r\n\r\nconst selectItem1 = [];\r\n\r\nconst Selectedarray = [];\r\nexport class EditProductType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Address: \"\",\r\n      FirstName: \"\",\r\n      Lastname: \"\",\r\n      postalCode: \"\",\r\n      UserName: \"\",\r\n      Mobile_no: \"\",\r\n      email: \"\",\r\n      SelectedState: \"\",\r\n      SelectedSupplierCity: [],\r\n      SelectedSCity: [],\r\n      postalCode: \"\",\r\n      GSTIN: \"\",\r\n      B_City: \"\",\r\n      checkbox: \"\",\r\n      StateList: [],\r\n\r\n      CityList: [],\r\n\r\n      S_City: \"\",\r\n      B_Country: \"\",\r\n      S_Country: \"\",\r\n      Phone_no: \"\",\r\n      Place_of_Supply: \"\",\r\n      B_State: \"\",\r\n      S_State: \"\",\r\n      B_Street: \"\",\r\n      S_Street: \"\",\r\n      B_PinCode: \"\",\r\n      S_PinCode: \"\",\r\n      setuserList: false,\r\n      password: \"\",\r\n      status: \"\",\r\n      AssignRole: \"\",\r\n      CompanyName: \"\",\r\n      Companytype: \"\",\r\n      Selectuser: \"\",\r\n      UserId: \"\",\r\n      City: \"\",\r\n      Role: \"\",\r\n      viewData: [],\r\n      rolesList: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    await axiosConfig\r\n      .post(\"/usereditview\", data)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        // console.log(response.data.data?.city_id);\r\n        let myArray;\r\n        let newdata;\r\n        if (response.data.data?.city_id) {\r\n          myArray = response.data.data?.city_id.split(\",\");\r\n        }\r\n        // console.log(myArray);\r\n        // if (this.state.B_Street === this.state.S_Street) {\r\n        //   this.setState({ checkbox: true });\r\n        // }\r\n        const formdata = new FormData();\r\n        formdata.append(\"state_id\", response.data.data.state_id);\r\n        axiosConfig\r\n          .post(`/getcity`, formdata)\r\n          .then((res) => {\r\n            console.log(res?.data?.cities);\r\n            newdata = res?.data?.cities?.filter((ele) => {\r\n              if (myArray.includes(ele?.id)) {\r\n                return ele;\r\n              }\r\n            });\r\n            console.log(newdata);\r\n            this.setState({ SelectedSupplierCity: newdata });\r\n            this.setState({ selectedValue: newdata });\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        // formdata.append(\"state_id\", response.data.data.billing_state);\r\n        // axiosConfig\r\n        //   .post(`/getcity`, formdata)\r\n        //   .then((res) => {\r\n        //     // console.log(res?.data?.cities);\r\n        //     this.setState({ CityList: res?.data?.cities });\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //   });\r\n        // formdata.append(\"state_id\", response.data.data.shipping_state);\r\n        // axiosConfig\r\n        //   .post(`/getcity`, formdata)\r\n        //   .then((res) => {\r\n        //     // console.log(res?.data?.cities);\r\n        //     this.setState({ CityList: res?.data?.cities });\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //   });\r\n        this.setState({\r\n          SelectedState: response.data.data.state_id,\r\n          email: response.data.data.email,\r\n          FirstName: response.data.data.firstname,\r\n          Lastname: response.data.data.lastname,\r\n          UserName: response.data.data.username,\r\n          Mobile_no: response.data.data.mobile,\r\n          selectedValue: newdata,\r\n          // B_City: response.data.data.billing_city,\r\n          // GSTIN: response.data.data.gstin_no,\r\n          // B_Country: response.data.data.billing_country,\r\n          // B_PinCode: response.data.data.billing_pincode,\r\n          // B_State: response.data.data.billing_state,\r\n          // B_Street: response.data.data.billing_street,\r\n          // CompanyName: response.data.data.company_name,\r\n          // Companytype: response.data.data.company_type,\r\n          // Role: response.data.data.role,\r\n          // AssignRole: response.data.data.role,\r\n\r\n          // fullname: response.data.data.full_name,\r\n          // Phone_no: response.data.data.phone_no,\r\n          // Place_of_Supply: response.data.data.place_supply,\r\n          // S_City: response.data.data.shipping_city,\r\n          // S_Country: response.data.data.shipping_country,\r\n          // S_PinCode: response.data.data.shipping_pincode,\r\n          // S_State: response.data.data.shipping_state,\r\n          // S_Street: response.data.data.shipping_street,\r\n          // password: response.data.data.password,\r\n          status: response.data.data.status,\r\n          UserId: response.data.data.id,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    await axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then((response) => {\r\n        this.setState({\r\n          StateList: response.data?.states,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getrolelistdropdown\", formdata)\r\n      .then((response) => {\r\n        const propertyNames = Object.values(response.data?.data?.roles);\r\n        this.setState({\r\n          productName: propertyNames,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlerStatus = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  changeHandlerRole = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Role: e.target.value });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  receiveDataFromChild = (data) => {\r\n    // Handle the data received from the child component\r\n    // setReceivedData(data);\r\n    console.log(data);\r\n    this.setState({ selectedcities: data });\r\n  };\r\n  submitHandler = (e) => {\r\n    let { id } = this.props.match.params;\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    // formdata.append(\"username\", this.state.UserName);\r\n    // formdata.append(\"mobile\", this.state.Mobile_no);\r\n    // formdata.append(\"email\", this.state.email);\r\n    // formdata.append(\"state_id\", this.state.SelectedState);\r\n    formdata.append(\"id\", id);\r\n\r\n    // formdata.append(\"password\", this.state.password);\r\n    // formdata.append(\"full_name\", this.state.fullname);\r\n\r\n    // formdata.append(\"gstin_no\", this.state.GSTIN);\r\n    formdata.append(\"city\", this.state.B_City);\r\n    formdata.append(\"status\", this.state.status);\r\n    formdata.append(\"role\", this.state.AssignRole);\r\n    // formdata.append(\"company_name\", this.state.CompanyName);\r\n    // formdata.append(\"company_type\", this.state.Companytype);\r\n    // formdata.append(\"place_supply\", this.state.Place_of_Supply);\r\n    // formdata.append(\"billing_street\", this.state.B_Street);\r\n    // formdata.append(\"billing_city\", this.state.B_City);\r\n    // formdata.append(\"billing_state\", this.state.B_State);\r\n    // formdata.append(\"billing_country\", this.state.B_Country);\r\n    // formdata.append(\"billing_pincode\", this.state.B_PinCode);\r\n    // formdata.append(\"shipping_street\", this.state.S_Street);\r\n    // formdata.append(\"shipping_city\", this.state.S_City);\r\n    // formdata.append(\"shipping_state\", this.state.S_State);\r\n    // formdata.append(\"shipping_country\", this.state.S_Country);\r\n    // formdata.append(\"shipping_pincode\", this.state.S_PinCode);\r\n    // formdata.append(\"phone_no\", this.state.Phone_no);\r\n    formdata.append(\"city_id\", uniqueChars);\r\n\r\n    axiosConfig\r\n      .post(\"/usereditsubmit\", formdata)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // this.setState({EditData:response.data.data})\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\r\n        //   \"/app/freshlist/attribute/productAttributeList\"\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleMatchaddress = (value) => {\r\n    this.setState({ checkbox: value });\r\n    if (value) {\r\n      this.setState({ S_Country: this.state.B_Country });\r\n      this.setState({ S_State: this.state.B_State });\r\n      this.setState({ S_City: this.state.B_City });\r\n      this.setState({ S_Street: this.state.B_Street });\r\n      this.setState({ S_PinCode: this.state.B_PinCode });\r\n    } else {\r\n      this.setState({ S_Country: \"\" });\r\n      this.setState({ S_State: \"\" });\r\n      this.setState({ S_City: \"\" });\r\n      this.setState({ S_Street: \"\" });\r\n      this.setState({ S_PinCode: \"\" });\r\n    }\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList);\r\n\r\n    console.log(selectedList.length);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  }\r\n  onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n    console.log(selectItem1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit User\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/userlist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <div className=\"container \">\r\n              <h4 className=\"py-2\">\r\n                Selected User Type :-{\" \"}\r\n                {this.state.AssignRole === \"Client\" ? \"Client\" : \"User\"}\r\n              </h4>\r\n            </div>\r\n\r\n            <CardBody>\r\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                <Row className=\"mb-2\">\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>First Name*</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"FirstName\"\r\n                        value={this.state.FirstName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Last Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"Lastname\"\r\n                        value={this.state.Lastname}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>User Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"UserName\"\r\n                        value={this.state.UserName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Mobile Number *</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Mobile_no\"\r\n                        value={this.state.Mobile_no}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          // Use regular expression to allow only numbers\r\n                          const numericValue = value.replace(/\\D/g, \"\");\r\n                          this.setState({ Mobile_no: numericValue });\r\n                        }}\r\n                        // onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  {/* <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Phone Number </Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Phone_no\"\r\n                        value={this.state.Phone_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col> */}\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Email</Label>\r\n                      <Input\r\n                        required\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"abcd@gmail.com...\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  {/* <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Name</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter CompanyName\"\r\n                        name=\"CompanyName\"\r\n                        value={this.state.CompanyName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Type</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Companytype\"\r\n                        name=\"Companytype\"\r\n                        value={this.state.Companytype}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>GSTIN</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter GSTIN No.\"\r\n                        name=\"GSTIN\"\r\n                        value={this.state.GSTIN}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Place of Supply</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Place_of_Supply\"\r\n                        name=\"Place_of_Supply\"\r\n                        value={this.state.Place_of_Supply}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col> */}\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <label for=\"cars\">Choose State</label>\r\n                      <select\r\n                        name=\"SelectedState\"\r\n                        value={this.state.SelectedState}\r\n                        onChange={(e) => {\r\n                          console.log(e.target.value);\r\n                          const formdata = new FormData();\r\n                          this.setState({ SelectedState: e.target.value });\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              console.log(res?.data?.cities);\r\n                              this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {this.state.StateList &&\r\n                          this.state.StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <label for=\"cars\">Choose City</label>\r\n                    {/* <Multiselect\r\n                      options={this.state.CityList} // Options to display in the dropdown\r\n                      selectedValues={\r\n                        this.state.selectedValue ||\r\n                        this.state.SelectedSupplierCity\r\n                      } // Preselected value to persist in dropdown\r\n                      onSelect={this.onSelect} // Function will trigger on select event\r\n                      onRemove={this.onRemove} // Function will trigger on remove event\r\n                      displayValue=\"name\" // Property name to display in the dropdown options\r\n                    /> */}\r\n                    <EditCity\r\n                      city={this.state.CityList}\r\n                      selected={this.state.selectedValue}\r\n                      SelectedSupplierCity={this.state.SelectedSupplierCity}\r\n                      // Received={Received}\r\n                      sendDataToParent={this.receiveDataFromChild}\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Postal Code</Label>\r\n                      <Input\r\n                        required\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        type=\"text\"\r\n                        placeholder=\"452001\"\r\n                        name=\"postalCode\"\r\n                        value={this.state.postalCode}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          // Use regular expression to allow only numbers\r\n                          const numericValue = value.replace(/\\D/g, \"\");\r\n                          this.setState({ postalCode: numericValue });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                {/* <Row>\r\n                  <Col>\r\n                    <h4 className=\"mt-4\">Billing Address :</h4>\r\n\r\n                    <Col className=\"py-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_Country\"\r\n                          value={this.state.B_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"B_State\"\r\n                          value={this.state.B_State}\r\n                          onChange={(e) => {\r\n                            console.log(e.target.value);\r\n                            this.setState({ B_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"B_City\"\r\n                            value={this.state.B_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList &&\r\n                              this.state.CityList?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"B_Street\"\r\n                          value={this.state.B_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"B_PinCode\"\r\n                          value={this.state.B_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col lg=\"1\" md=\"1\">\r\n                        <input\r\n                          name=\"check\"\r\n                          checked={\r\n                            this.state.B_Street === this.state.S_Street\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            this.handleMatchaddress(e.target.checked);\r\n                          }}\r\n                          style={{\r\n                            height: \"15px\",\r\n                            width: \"20px\",\r\n                          }}\r\n                          type=\"checkbox\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <h5> Same as Billing Address </h5>\r\n                      </Col>\r\n                    </Row>\r\n                    <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_Country\"\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          value={this.state.S_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"S_State\"\r\n                          value={this.state.S_State}\r\n                          onChange={(e) => {\r\n                            // console.log(e.target.value);\r\n                            this.setState({ S_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                console.log(res?.data?.cities);\r\n                                this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"S_City\"\r\n                            value={this.state.S_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList &&\r\n                              this.state.CityList?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"S_Street\"\r\n                          value={this.state.S_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"S_PinCode\"\r\n                          value={this.state.S_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                </Row> */}\r\n\r\n                {this.state.setuserList && (\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <Label className=\"mt-2  mb-2\"> Select Role</Label>\r\n\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"\"\r\n                        name=\"AssignRole\"\r\n                        value={this.state.AssignRole}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option value=\"Admin\">--Select Role--</option>\r\n\r\n                        {this.state.productName &&\r\n                          this.state.productName?.map((value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          ))}\r\n                      </CustomInput>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                    <Label className=\"mb-1 py-2\">\r\n                      <h4>Status</h4>\r\n                    </Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={this.changeHandler1}\r\n                    >\r\n                      <input\r\n                        checked={this.state.status === \"Active\" ? true : false}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        checked={\r\n                          this.state.status === \"Deactive\" ? true : false\r\n                        }\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mt-2 mx-2\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProductType;\r\n"],"sourceRoot":""}