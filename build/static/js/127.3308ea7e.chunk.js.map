{"version":3,"sources":["views/apps/chat/receiverProfile.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/chat/index.js","views/apps/chat/ChatSidebar.js","views/apps/chat/ChatLog.js","views/apps/chat/UserSidebar.js","views/apps/chat/Chat.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["ReceiverProfile","state","activeUser","this","className","props","receiverProfile","onClick","handleReceiverSidebar","size","src","photoURL","alt","displayName","height","width","status","options","wheelPropagation","about","React","Component","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","sidebarClassName","ref","sidebarId","overlayClassName","overlayId","contentClassName","contentId","children","defaultProps","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule","getChats","dispatch","axios","get","then","response","type","contacts","data","chats","catch","err","console","log","ChatSidebar","chatsContacts","messages","value","getChatContents","getContactChats","handleOnChange","e","searchContacts","chat","chatContacts","contactsArr","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","handleActiveChat","markSeenAllMessages","mainSidebar","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","isSeen","isSent","activeID","undefined","activeChatID","textContent","Badge","color","pill","Card","handleUserSidebar","userImg","FormGroup","Input","placeholder","onChange","connect","chatApp","query","post","contactId","ChatLog","activeChat","handleSendMessage","isPinned","text","sendMessage","handleTime","time_to","time_from","date_time_to","parse","date_time_from","getFullYear","getMonth","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","Fragment","renderSentTime","mql","matches","togglePinned","stroke","el","onSubmit","preventDefault","Button","newMsg","toString","message","UserSidebar","userProfile","name","rows","maxLength","label","defaultChecked","changeStatus","matchMedia","Chat","sidebarDocked","sidebarOpen","userSidebar","user","onSetSidebarOpen","mediaQueryChanged","addListener","removeListener","Consumer","context","direction","_excluded","propTypes","PropTypes","string","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","_React$Component","getRef","focus","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","warnOnce","classes","mapToCssModules","classNames","_extends","row","check","inline","disabled"],"mappings":"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","file":"static/js/127.3308ea7e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nclass ReceiverProfile extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.activeUser !== state.activeUser) {\r\n      return {\r\n        activeUser: props.activeUser\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    activeUser: null\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    return (\r\n      <div\r\n        className={`user-profile-sidebar ${\r\n          this.props.receiverProfile ? \"show\" : null\r\n        }`}\r\n      >\r\n        <header className=\"user-profile-header\">\r\n          <span\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </span>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={activeUser !== null ? activeUser.photoURL : null}\r\n                alt={activeUser !== null ? activeUser.displayName : null}\r\n                height=\"66\"\r\n                width=\"66\"\r\n              />\r\n              <span\r\n                className={`${\r\n                  activeUser !== null && activeUser.status === \"do not disturb\"\r\n                    ? \"avatar-status-busy\"\r\n                    : activeUser !== null && activeUser.status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : activeUser !== null && activeUser.status === \"offline\"\r\n                    ? \"avatar-status-offline\"\r\n                    : \"avatar-status-online\"\r\n                } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">\r\n              {activeUser !== null ? activeUser.displayName : null}\r\n            </h4>\r\n          </div>\r\n        </header>\r\n        <PerfectScrollbar\r\n          className=\"user-profile-sidebar-area p-2\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h6>About</h6>\r\n          <p>{activeUser !== null ? activeUser.about : null}</p>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ReceiverProfile\r\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import axios from \"axios\"\r\n\r\nexport const getChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chats\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CONTACTS\",\r\n          contacts: response.data.contacts,\r\n          chats: response.data.chats\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getContactChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chat-contacts\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CHAT_CONTACTS\",\r\n          chats: response.data\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const togglePinned = (id, value) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/set-pinned/\", {\r\n        contactId: id,\r\n        value\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"SET_PINNED\",\r\n          id,\r\n          value\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const sendMessage = (id, isPinned, text) => {\r\n  if (text.length > 0) {\r\n    return dispatch => {\r\n      let newMsg = {\r\n        textContent: text,\r\n        isSent: true,\r\n        isSeen: false,\r\n        time: new Date().toString()\r\n      }\r\n      axios\r\n        .post(\"/api/app/chat/send-message\", {\r\n          contactId: id,\r\n          message: newMsg,\r\n          isPinned\r\n        })\r\n        .then(response => {\r\n          dispatch({\r\n            type: \"SEND_MESSAGE\",\r\n            msg: newMsg,\r\n            id,\r\n            isPinned,\r\n            text\r\n          })\r\n          dispatch(getChats())\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  } else {\r\n    return\r\n  }\r\n}\r\n\r\nexport const changeStatus = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"CHANGE_STATUS\",\r\n      status\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchContacts = query => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_CONTACTS\",\r\n      query\r\n    })\r\n  }\r\n}\r\n\r\nexport const markSeenAllMessages = id => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/mark-all-seen/\", {\r\n        contactId: id\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"MARK_AS_SEEN\",\r\n          id\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\r\nimport { X, Search } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getChats,\r\n  getContactChats,\r\n  searchContacts,\r\n  markSeenAllMessages\r\n} from \"../../../redux/actions/chat/index\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\n\r\nclass ChatSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.chat.chatContacts.length !== state.chatContacts ||\r\n      props.chat.contacts.length !== state.contacts ||\r\n      props.chat.chats.length !== state.chats ||\r\n      props.chat.status !== state.status\r\n    ) {\r\n      return {\r\n        chatsContacts: props.chat.chatContacts,\r\n        contacts: props.chat.contacts,\r\n        chats: props.chat.chats,\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    chatsContacts: [],\r\n    contacts: [],\r\n    messages: [],\r\n    status: null,\r\n    value: \"\"\r\n  }\r\n\r\n  getChatContents = () => {\r\n    this.props.getChats()\r\n    this.props.getContactChats()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getChatContents()\r\n    this.setState({\r\n      chatsContacts: this.props.chat.chatContacts,\r\n      contacts: this.props.chat.contacts,\r\n      chats: this.props.chat.chats,\r\n      status: this.props.chat.status\r\n    })\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchContacts(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { contacts, chatsContacts, chats, status, value } = this.state\r\n    const contactsArr = value.length\r\n      ? this.props.chat.filteredContacts\r\n      : contacts\r\n    const chatsArr = value.length\r\n      ? this.props.chat.filteredChats\r\n      : chatsContacts\r\n    let renderContacts =\r\n      contactsArr.length > 0\r\n        ? contactsArr.map(contact => (\r\n            <li\r\n              key={contact.uid}\r\n              onClick={() => {\r\n                this.props.handleActiveChat(\r\n                  contact.uid,\r\n                  contact,\r\n                  chats[contact.uid]\r\n                )\r\n                this.props.markSeenAllMessages(contact.uid)\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              <div className=\"pr-1\">\r\n                <span className=\"avatar avatar-md m-0\">\r\n                  <img\r\n                    src={contact.photoURL}\r\n                    alt={contact.displayName}\r\n                    height=\"38\"\r\n                    width=\"38\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"user-chat-info\">\r\n                <div className=\"contact-info\">\r\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\r\n                  <p className=\"truncate\">{contact.about}</p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))\r\n        : null\r\n    let renderChats =\r\n      chatsArr && Array.isArray(chatsArr)\r\n        ? chatsArr.map(chat => {\r\n            let lastMsg =\r\n                chats[chat.uid] && chats[chat.uid].msg\r\n                  ? chats[chat.uid].msg.slice(-1)[0]\r\n                  : null,\r\n              lastMsgDate = new Date(\r\n                lastMsg && lastMsg.time ? lastMsg.time : null\r\n              ),\r\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\r\n                month: \"short\"\r\n              }),\r\n              lastMsgDay = lastMsgDate.getDate()\r\n            let pendingMsg =\r\n              chats[chat.uid] && chats[chat.uid].msg\r\n                ? chats[chat.uid].msg.filter(\r\n                    i => i.isSeen === false && i.isSent !== true\r\n                  ).length\r\n                : null\r\n            let activeID =\r\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\r\n            return (\r\n              <li\r\n                key={chat.uid}\r\n                onClick={() => {\r\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\r\n                  this.props.mainSidebar(false)\r\n                  this.props.markSeenAllMessages(chat.uid)\r\n                }}\r\n                className={`${\r\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"pr-1\">\r\n                  <span className=\"avatar avatar-md m-0\">\r\n                    <img\r\n                      src={chat.photoURL}\r\n                      alt={chat.displayName}\r\n                      height=\"38\"\r\n                      width=\"38\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n                <div className=\"user-chat-info\">\r\n                  <div className=\"contact-info\">\r\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\r\n                    <p className=\"truncate\">\r\n                      {lastMsg ? lastMsg.textContent : chat.about}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"contact-meta d-flex- flex-column\">\r\n                    <span className=\"float-right mb-25\">\r\n                      {lastMsgMonth + \" \" + lastMsgDay}\r\n                    </span>\r\n                    {pendingMsg > 0 ? (\r\n                      <div className=\"unseen-msg\">\r\n                        <Badge\r\n                          className=\"badge-md float-right\"\r\n                          color=\"primary\"\r\n                          pill\r\n                        >\r\n                          {pendingMsg}\r\n                        </Badge>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            )\r\n          })\r\n        : null\r\n    return (\r\n      <Card className=\"sidebar-content h-100\">\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"chat-fixed-search\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\r\n              <div\r\n                className=\"avatar\"\r\n                onClick={() => this.props.handleUserSidebar(\"open\")}\r\n              >\r\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\r\n                <span\r\n                  className={\r\n                    status === \"dnd\"\r\n                      ? \"avatar-status-busy\"\r\n                      : status === \"away\"\r\n                      ? \"avatar-status-away\"\r\n                      : status === \"offline\"\r\n                      ? \"avatar-status-offline\"\r\n                      : \"avatar-status-online\"\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\r\n              <Input\r\n                className=\"round\"\r\n                type=\"text\"\r\n                placeholder=\"Search contact or start a new chat\"\r\n                onChange={e => this.handleOnChange(e)}\r\n                value={value}\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Search size={15} />\r\n              </div>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"chat-user-list list-group\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\r\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\r\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\r\n          <ul className=\"chat-users-list-wrapper media-list\">\r\n            {renderContacts}\r\n          </ul>\r\n        </PerfectScrollbar>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getChats,\r\n  getContactChats,\r\n  searchContacts,\r\n  markSeenAllMessages\r\n})(ChatSidebar)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Input, Button } from \"reactstrap\"\r\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\n\r\nclass ChatLog extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.activeUser !== state.activeChat ||\r\n      props.activeChat !== state.activeChat\r\n    ) {\r\n      return {\r\n        activeUser: props.activeUser,\r\n        activeChat: props.activeChat\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    msg: \"\",\r\n    activeUser: null,\r\n    activeChat: null\r\n  }\r\n\r\n  handleSendMessage = (id, isPinned, text) => {\r\n    if (text.length > 0) {\r\n      this.props.sendMessage(id, isPinned, text)\r\n      this.setState({\r\n        msg: \"\"\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.scrollToBottom()\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom()\r\n  }\r\n\r\n  handleTime = (time_to, time_from) => {\r\n    const date_time_to = new Date(Date.parse(time_to))\r\n    const date_time_from = new Date(Date.parse(time_from))\r\n    return (\r\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\r\n      date_time_to.getMonth() === date_time_from.getMonth() &&\r\n      date_time_to.getDate() === date_time_from.getDate()\r\n    )\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\r\n    chatContainer.scrollTop = chatContainer.scrollHeight\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\r\n      activeChat =\r\n        activeUser && activeUser.uid\r\n          ? this.props.chat.chats[activeUserUid]\r\n          : null\r\n\r\n    let renderChats =\r\n      activeChat && activeChat !== undefined && activeChat.msg\r\n        ? activeChat.msg.map((chat, i) => {\r\n            let renderSentTime = () => {\r\n              if (\r\n                i > 0 &&\r\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\r\n              ) {\r\n                return (\r\n                  <div className=\"divider\">\r\n                    <div className=\"divider-text\">\r\n                      {new Date().getDate() +\r\n                        \" \" +\r\n                        new Date().toLocaleString(\"default\", {\r\n                          month: \"short\"\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            }\r\n            let renderAvatar = () => {\r\n              if (i > 0) {\r\n                if (\r\n                  chat.isSent === true &&\r\n                  activeChat.msg[i - 1].isSent !== true\r\n                ) {\r\n                  return (\r\n                    <div className=\"chat-avatar\">\r\n                      <div className=\"avatar m-0\">\r\n                        <img\r\n                          src={userImg}\r\n                          alt=\"chat avatar\"\r\n                          height=\"40\"\r\n                          width=\"40\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                } else if (chat.isSent !== true) {\r\n                  return (\r\n                    <div className=\"chat-avatar\">\r\n                      <div className=\"avatar m-0\">\r\n                        <img\r\n                          src={activeUser.photoURL}\r\n                          alt=\"chat avatar\"\r\n                          height=\"40\"\r\n                          width=\"40\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                } else {\r\n                  return \"\"\r\n                }\r\n              } else {\r\n                return (\r\n                  <div className=\"chat-avatar\">\r\n                    <div className=\"avatar m-0\">\r\n                      <img\r\n                        src={chat.isSent ? userImg : activeUser.photoURL}\r\n                        alt=\"chat avatar\"\r\n                        height=\"40\"\r\n                        width=\"40\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            }\r\n            return (\r\n              <React.Fragment key={i}>\r\n                {renderSentTime()}\r\n                <div\r\n                  className={`chat ${\r\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\r\n                  }`}>\r\n                  {renderAvatar()}\r\n                  <div className=\"chat-body\">\r\n                    <div className=\"chat-content\">{chat.textContent}</div>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        : null\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"chat-app-window\">\r\n          <div\r\n            className={`start-chat-area ${\r\n              activeUser !== null ? \"d-none\" : \"d-flex\"\r\n            }`}>\r\n            <span className=\"mb-1 start-chat-icon\">\r\n              <MessageSquare size={50} />\r\n            </span>\r\n            <h4\r\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\r\n              onClick={() => {\r\n                if (this.props.mql.matches === false) {\r\n                  this.props.mainSidebar(true)\r\n                } else {\r\n                  return null\r\n                }\r\n              }}>\r\n              Start Conversation\r\n            </h4>\r\n          </div>\r\n          <div\r\n            className={`active-chat ${\r\n              activeUser === null ? \"d-none\" : \"d-block\"\r\n            }`}>\r\n            <div className=\"chat_navbar\">\r\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div\r\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\r\n                    onClick={() => this.props.mainSidebar(true)}>\r\n                    <Menu size={24} />\r\n                  </div>\r\n                  <div\r\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\r\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\r\n                    <img\r\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\r\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\r\n                      height=\"40\"\r\n                      width=\"40\"\r\n                    />\r\n                    <span\r\n                      className={`\r\n                    ${\r\n                      activeUser !== null &&\r\n                      activeUser.status === \"do not disturb\"\r\n                        ? \"avatar-status-busy\"\r\n                        : activeUser !== null && activeUser.status === \"away\"\r\n                        ? \"avatar-status-away\"\r\n                        : activeUser !== null && activeUser.status === \"offline\"\r\n                        ? \"avatar-status-offline\"\r\n                        : \"avatar-status-online\"\r\n                    }\r\n                    `}\r\n                    />\r\n                  </div>\r\n                  <h6 className=\"mb-0\">\r\n                    {activeUser !== null ? activeUser.displayName : \"\"}\r\n                  </h6>\r\n                </div>\r\n                <span\r\n                  className=\"favorite\"\r\n                  onClick={() => {\r\n                    if (activeChat) {\r\n                      this.props.togglePinned(\r\n                        activeUser.uid,\r\n                        !activeChat.isPinned\r\n                      )\r\n                    }\r\n                  }}>\r\n                  <Star\r\n                    size={22}\r\n                    stroke={\r\n                      activeChat && activeChat.isPinned === true\r\n                        ? \"#FF9F43\"\r\n                        : \"#626262\"\r\n                    }\r\n                  />\r\n                </span>\r\n              </header>\r\n            </div>\r\n            <PerfectScrollbar\r\n              className=\"user-chats\"\r\n              options={{\r\n                wheelPropagation: false\r\n              }}\r\n              ref={el => {\r\n                this.chatArea = el\r\n              }}>\r\n              <div className=\"chats\">{renderChats}</div>\r\n            </PerfectScrollbar>\r\n            <div className=\"chat-app-form\">\r\n              <form\r\n                className=\"chat-app-input d-flex align-items-center\"\r\n                onSubmit={e => {\r\n                  e.preventDefault()\r\n                  this.handleSendMessage(\r\n                    activeUser.uid,\r\n                    false,\r\n                    this.state.msg,\r\n                    activeUser\r\n                  )\r\n                }}>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"message mr-1 ml-50\"\r\n                  placeholder=\"Type your message\"\r\n                  value={this.state.msg}\r\n                  onChange={e => {\r\n                    e.preventDefault()\r\n                    this.setState({\r\n                      msg: e.target.value\r\n                    })\r\n                  }}\r\n                />\r\n                <Button color=\"primary\">\r\n                  <Send className=\"d-lg-none\" size={15} />\r\n                  <span className=\"d-lg-block d-none\">Send</span>\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport { Input } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeStatus } from \"../../../redux/actions/chat/index\"\r\nimport Radio from \"../../../components/@vuexy/radio/RadioVuexy\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\nclass UserSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.chat.status !== state.status) {\r\n      return {\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    value:\r\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\r\n    status: null\r\n  }\r\n\r\n  render() {\r\n    const status = this.state.status\r\n    return (\r\n      <div\r\n        className={`chat-profile-sidebar ${\r\n          this.props.userProfile ? \"show\" : null\r\n        }`}\r\n      >\r\n        <header className=\"chat-profile-header\">\r\n          <div\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleUserSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </div>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\r\n              <span\r\n                className={`${\r\n                  status === \"offline\"\r\n                    ? \"avatar-status-offline\"\r\n                    : status === \"dnd\"\r\n                    ? \"avatar-status-busy\"\r\n                    : status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : \"avatar-status-online\"\r\n                } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">John Doe</h4>\r\n          </div>\r\n        </header>\r\n        <div className=\"profile-sidebar-area\">\r\n          <PerfectScrollbar\r\n            className=\"scroll-area\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <h6>About</h6>\r\n            <div className=\"about-user\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"text\"\r\n                id=\"userAbout\"\r\n                rows=\"5\"\r\n                value={this.state.value}\r\n                maxLength=\"120\"\r\n                onChange={e => this.setState({ value: e.target.value })}\r\n              />\r\n              <small className=\"counter-value float-right\">\r\n                {`${this.state.value.length} / 120`}\r\n              </small>\r\n            </div>\r\n            <h3 className=\"mt-3\">Status</h3>\r\n            <ul className=\"list-unstyled user-status mb-0\">\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Active\"\r\n                  color=\"success\"\r\n                  defaultChecked={true}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"active\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Do Not Disturb\"\r\n                  color=\"danger\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"dnd\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Away\"\r\n                  color=\"warning\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"away\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Offline\"\r\n                  color=\"secondary\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"offline\")}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar)\r\n","import React from \"react\"\r\nimport Sidebar from \"react-sidebar\"\r\nimport { ContextLayout } from \"../../../utility/context/Layout\"\r\nimport ChatSidebarContent from \"./ChatSidebar\"\r\nimport ChatLog from \"./ChatLog\"\r\nimport ReceiverSidebar from \"./receiverProfile\"\r\nimport UserSidebar from \"./UserSidebar\"\r\nimport \"../../../assets/scss/pages/app-chat.scss\"\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Chat extends React.Component {\r\n  state = {\r\n    userProfile: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    activeChatID: null,\r\n    activeChat: null,\r\n    activeUser: null,\r\n    receiverProfile: false,\r\n    userSidebar: false\r\n  }\r\n  // mounted = false\r\n  handleUserSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        userProfile: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        userProfile: false\r\n      })\r\n    }\r\n  }\r\n  handleActiveChat = (id, user, chats) => {\r\n    this.setState({\r\n      activeChatID: id,\r\n      activeUser: user,\r\n      activeChat: chats\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleReceiverSidebar = status => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n          receiverProfile: true\r\n        })\r\n      : this.setState({\r\n          receiverProfile: false\r\n        })\r\n  }\r\n\r\n  handleUserSidebar = status => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n          userSidebar: true\r\n        })\r\n      : this.setState({\r\n          userSidebar: false\r\n        })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-application position-relative\">\r\n        <div\r\n          className={`chat-overlay ${\r\n            this.state.receiverProfile ||\r\n            this.state.userSidebar ||\r\n            this.state.sidebarOpen\r\n              ? \"show\"\r\n              : \"d-none\"\r\n          }`}\r\n          onClick={() => {\r\n            this.handleReceiverSidebar(\"close\")\r\n            this.handleUserSidebar(\"close\")\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {context => (\r\n            <Sidebar\r\n              sidebar={\r\n                <ChatSidebarContent\r\n                  activeChatID={this.state.activeChatID}\r\n                  handleActiveChat={this.handleActiveChat}\r\n                  handleUserSidebar={this.handleUserSidebar}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              touch={false}\r\n              sidebarClassName=\"chat-sidebar\"\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}>\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <UserSidebar\r\n          userProfile={this.state.userSidebar}\r\n          handleUserSidebar={this.handleUserSidebar}\r\n        />\r\n        <ChatLog\r\n          activeChat={this.state.activeChat}\r\n          activeUser={this.state.activeUser}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          mql={mql}\r\n          handleActiveChat={this.handleActiveChat}\r\n        />\r\n        <ReceiverSidebar\r\n          activeUser={this.state.activeUser}\r\n          receiverProfile={this.state.receiverProfile}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}