{"version":3,"sources":["views/apps/freshlist/customer/EditService.js"],"names":["i","AddCustomer","props","onEditorStateChange","editorState","setState","description","draftToHtml","convertToRaw","getCurrentContent","onChangeHandler","event","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","id","match","params","data","FormData","pageparmission","JSON","parse","localStorage","getItem","append","Userinfo","state","Category","Title","values","keys","key","axiosConfig","post","then","response","swal","history","push","catch","error","banner_title","rowData","Notice","PageName","undefined","EditorState","createEmpty","this","formdata","cat_id","title","newContent","blocksFromHTML","convertFromHTML","newContentState","ContentState","createFromBlockArray","contentBlocks","entityMap","newEditorState","createWithContent","err","role","category","className","render","onClick","onSubmit","lg","md","sm","required","type","placeholder","onChange","map","ele","toolbarClassName","wrapperClassName","editorClassName","checked","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/295.7bdd97fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  ContentState,\r\n  EditorState,\r\n  convertFromHTML,\r\n  convertToRaw,\r\n} from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default class AddCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      banner_title: \"\",\r\n      rowData: [],\r\n      Category: \"\",\r\n      Notice: \"\",\r\n      Title: \"\",\r\n      PageName: \"\",\r\n      selectedFile: undefined,\r\n      selectedName: \"\",\r\n      status: \"\",\r\n      description: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      description: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  async componentDidMount() {\r\n    let { id } = this.props?.match?.params;\r\n    console.log(id);\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"service_id\", id);\r\n    await axiosConfig\r\n      .post(\"/editServiceView\", formdata)\r\n      .then((response) => {\r\n        let rowData = response.data?.data;\r\n        console.log(rowData);\r\n        this.setState({\r\n          Category: rowData.cat_id,\r\n          Title: rowData?.title,\r\n          status: rowData?.status,\r\n        });\r\n        const newContent = rowData?.description;\r\n        const blocksFromHTML = convertFromHTML(newContent);\r\n        const newContentState = ContentState.createFromBlockArray(\r\n          blocksFromHTML.contentBlocks,\r\n          blocksFromHTML.entityMap\r\n        );\r\n        const newEditorState = EditorState.createWithContent(newContentState);\r\n        console.log(newEditorState);\r\n        this.setState({\r\n          description: rowData?.description,\r\n          editorState: newEditorState,\r\n        });\r\n        // if (rowData) {\r\n        //   // this.setState({ rowData });\r\n        // }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    const data = new FormData();\r\n\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getcategoryList\", data)\r\n      .then((response) => {\r\n        let rowData = response.data?.data.category;\r\n        // console.log(rowData);\r\n        if (rowData) {\r\n          this.setState({ rowData });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files });\r\n    this.setState({ selectedName: event.target.files.name });\r\n    console.log(event.target.files);\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props?.match?.params;\r\n    console.log(id);\r\n    const data = new FormData();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // debugger;\r\n    data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    data.append(\"cat_id\", this.state.Category);\r\n    data.append(\"title\", this.state.Title);\r\n    data.append(\"status\", this.state.status);\r\n    data.append(\"description\", this.state.description);\r\n    data.append(\"edit_id\", id);\r\n    // for (const file of this.state.selectedFile) {\r\n    // if (this.state.selectedFile !== null) {\r\n    //   data.append(\"banner_img\", file);\r\n    // }\r\n    // }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n    axiosConfig\r\n      .post(\"/addServices\", data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Successful!\", \"Details Added Successfully\", \"success\");\r\n        this.props.history.push(\"/app/mmbaic/services/List\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    const { banner_title, Notice, Title, PageName, editorState, Category } =\r\n      this.state;\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <div className=\"container mt-1\">\r\n            <Row>\r\n              <Col>\r\n                <h2>Edit Services</h2>\r\n              </Col>\r\n\r\n              <Col>\r\n                <div className=\"d-flex float-right\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\" btn btn-danger float-right\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/mmbaic/services/List\")\r\n                        }\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <CardHeader></CardHeader>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label> Select Category</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"Category\"\r\n                    placeholder=\"Enter Header Category\"\r\n                    value={Category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>--Select--</option>\r\n                    {this.state.rowData &&\r\n                      this.state.rowData?.map((ele, i) => {\r\n                        return (\r\n                          <option value={ele?.id} key={i}>\r\n                            {ele?.category}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label> Service Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"Title\"\r\n                    placeholder=\"Enter Header Title\"\r\n                    value={Title}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Image</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    // name=\"PageName\"\r\n                    // placeholder=\"Enter PageName\"\r\n                    // value={this.state.PageName}\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col> */}\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Enter Details</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                  />\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Banner Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"banner_title\"\r\n                    placeholder=\"Enter Banner Title\"\r\n                    value={this.state.banner_title}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Banner image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Banner Type</Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name=\"bannertype\"\r\n                    placeholder=\"Enter Banner Type\"\r\n                    value={this.state.bannertype}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"select\">--Select--</option>\r\n                    <option value=\"AB\">AB</option>\r\n                    <option value=\"PV\">PV</option>\r\n                  </CustomInput>\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Banner URL</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col> */}\r\n              </Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    checked={this.state.status == \"Active\"}\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n                  <input\r\n                    checked={this.state.status == \"Inactive\"}\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}