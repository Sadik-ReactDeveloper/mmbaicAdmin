{"version":3,"sources":["views/apps/freshlist/accounts/CreateAccount.js"],"names":["selectItem1","CreateAccount","useState","setViewpermisson","setEditpermisson","setCreatepermisson","setDeletepermisson","firstname","setFirstname","StateList","setStateList","CityList","setCityList","SelectedState","setSelectedState","Mobile_no","setMobile_no","Place_of_Supply","setPlace_of_Supply","multiSelect","setmultiSelect","selectedOptions","password","setpassword","email","setemail","status","setstatus","AssignRole","setAssignRole","Postalcode","setPostalCode","UserName","setUserName","productName","setproductName","setCity","Lastname","setLastname","navigate","useHistory","useEffect","pageparmission","JSON","parse","localStorage","getItem","newparmisson","role","find","value","pageName","permission","includes","formdata","FormData","append","Userinfo","id","axiosConfig","post","then","res","console","log","data","roles","catch","err","get","response","states","error","className","onSubmit","e","preventDefault","uniqueChars","Set","selectedOption","length","toString","success","push","swal","lg","md","required","type","name","onChange","target","map","index","key","sm","placeholder","maxLength","onKeyDown","size","min","numericValue","replace","for","showCheckbox","isObject","options","onSelect","selectedList","selectedItem","i","arr","ele","cities","onRemove","removedItem","displayValue","state_title","selectionLimit","style","marginRight","Ripple","color"],"mappings":"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","file":"static/js/303.a80e356b.chunk.js","sourcesContent":["// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { timers } from \"jquery\";\r\nconst selectItem1 = [];\r\nconst selectstate2 = [];\r\n\r\nconst AllunSelectedCity = [];\r\nconst Selectedarray = [];\r\n\r\nconst CreateAccount = () => {\r\n  // const [Address, setAddress] = useState(\"\");\r\n  const [Viewpermisson, setViewpermisson] = useState(null);\r\n  const [Editpermisson, setEditpermisson] = useState(null);\r\n  const [Createpermisson, setCreatepermisson] = useState(null);\r\n  const [Deletepermisson, setDeletepermisson] = useState(null);\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  // const [GSTIN, setGSTIN] = useState(\"\");\r\n  const [StateList, setStateList] = useState([]);\r\n  const [CityList, setCityList] = useState([]);\r\n  // const [SelectedSCity, setSelectedSCity] = useState([]);\r\n  const [SelectedState, setSelectedState] = useState([]);\r\n  // const [B_City, setB_City] = useState(\"\");\r\n  // const [checkbox, setcheckbox] = useState(\"\");\r\n  const [S_City, setS_City] = useState(\"\");\r\n  const [Mobile_no, setMobile_no] = useState(\"\");\r\n  // const [B_Country, setB_Country] = useState(\"\");\r\n  // const [S_Country, setS_Country] = useState(\"\");\r\n  // const [Phone_no, setPhone_no] = useState(\"\");\r\n  const [Place_of_Supply, setPlace_of_Supply] = useState(\"\");\r\n  // const [B_State, setB_State] = useState(\"\");\r\n  // const [S_State, setS_State] = useState(\"\");\r\n  // const [B_Street, setB_Street] = useState(\"\");\r\n  // const [S_Street, setS_Street] = useState(\"\");\r\n  // const [B_PinCode, setB_PinCode] = useState(\"\");\r\n  // const [S_PinCode, setS_PinCode] = useState(\"\");\r\n  const [multiSelect, setmultiSelect] = useState([]);\r\n  const [selectedOptions, setselectedOptions] = useState([]);\r\n  const [password, setpassword] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [status, setstatus] = useState(\"\");\r\n  const [AssignRole, setAssignRole] = useState(\"\");\r\n  const [Postalcode, setPostalCode] = useState(\"\");\r\n  // const [Companytype, setCompanytype] = useState(\"\");\r\n  const [UserName, setUserName] = useState(\"\");\r\n  const [productName, setproductName] = useState([]);\r\n  const [City, setCity] = useState(\"\");\r\n  const [Lastname, setLastname] = useState(\"\");\r\n  const navigate = useHistory();\r\n\r\n  useEffect(() => {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Create Account\"\r\n    );\r\n    setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n    setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n    setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n    setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n    let formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo.role);\r\n    axiosConfig\r\n      .post(\"/getrolelistdropdown\", formdata)\r\n      // .get(\"/getroleNamelist\")\r\n      .then((res) => {\r\n        console.log(res?.data.data);\r\n        setproductName(res?.data.data?.roles);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // const formdata = new FormData();\r\n    // formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    // formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    // axiosConfig.post(\"/getrolelistdropdown\", formdata).then((response) => {\r\n    //   const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n    //   setproductName(propertyNames);\r\n    // });\r\n    // state List\r\n    axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then((response) => {\r\n        setStateList(response.data?.states);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    let selectedOption = [...new Set(selectedOptions)];\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", AssignRole);\r\n    formdata.append(\"firstname\", firstname);\r\n    formdata.append(\"lastname\", Lastname);\r\n    formdata.append(\"username\", UserName);\r\n    formdata.append(\"password\", password);\r\n    formdata.append(\"mobile\", Mobile_no);\r\n    formdata.append(\"email\", email);\r\n    formdata.append(\"status\", status);\r\n    formdata.append(\"postal_code\", Postalcode);\r\n    // formdata.append(\"gstin_no\", GSTIN);\r\n    // formdata.append(\"city\", B_City);\r\n    // formdata.append(\"company_name\", Postalcode);\r\n    // formdata.append(\"company_type\", Companytype);\r\n    // formdata.append(\"place_supply\", Place_of_Supply);\r\n    // formdata.append(\"billing_street\", B_Street);\r\n    // formdata.append(\"billing_city\", B_City);\r\n    // formdata.append(\"billing_state\", B_State);\r\n    // formdata.append(\"billing_country\", B_Country);\r\n    // formdata.append(\"billing_pincode\", B_PinCode);\r\n    // formdata.append(\"shipping_street\", S_Street);\r\n    // formdata.append(\"shipping_city\", S_City);\r\n    // formdata.append(\"shipping_state\", S_State);\r\n    // formdata.append(\"shipping_country\", S_Country);\r\n    // formdata.append(\"shipping_pincode\", S_PinCode);\r\n    // formdata.append(\"phone_no\", Phone_no);\r\n    if (selectedOption.length > 0) {\r\n      formdata.append(\"state_id\", multiSelect.toString());\r\n    } else {\r\n      formdata.append(\"state_id\", SelectedState);\r\n    }\r\n\r\n    formdata.append(\"city_id\", uniqueChars);\r\n\r\n    axiosConfig\r\n      .post(\"/createuser\", formdata)\r\n      .then((response) => {\r\n        if (response.data?.success) {\r\n          navigate.push(\"/app/freshlist/house/userlist\");\r\n\r\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n          setAssignRole(\"\");\r\n          setstatus(\"\");\r\n          setFirstname(\"\");\r\n          setLastname(\"\");\r\n          setemail(\"\");\r\n          setCity(\"\");\r\n          setMobile_no(\"\");\r\n          // setPhone_no(\"\");\r\n\r\n          setstatus(\"\");\r\n          setUserName(\"\");\r\n          setPostalCode(\"\");\r\n          setSelectedState([]);\r\n          // setfullname(\"\");\r\n          selectItem1 = [];\r\n          setpassword(\"\");\r\n          // setS_Country(\"\");\r\n          // setS_State(\"\");\r\n          // setS_City(\"\");\r\n          // setS_Street(\"\");\r\n          // setS_PinCode(\"\");\r\n        }\r\n        // this.props.history.push(\"/app/freshlist/order/all\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  // const handleMatchaddress = (e, value) => {\r\n  //   setcheckbox(value);\r\n  //   if (value) {\r\n  //     setS_Country(B_Country);\r\n  //     setS_State(B_State);\r\n  //     setS_City(B_City);\r\n  //     setS_Street(B_Street);\r\n  //     setS_PinCode(B_PinCode);\r\n  //   } else {\r\n  //     setS_Country(\"\");\r\n  //     setS_State(\"\");\r\n  //     setS_City(\"\");\r\n  //     setS_Street(\"\");\r\n  //     setS_PinCode(\"\");\r\n  //   }\r\n  // };\r\n  const onSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectedOptions.push(selectedList[i].id);\r\n      }\r\n    }\r\n\r\n    let arr = selectedList.map((ele) => ele.id);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n\r\n    let uniqueChars = [...new Set(selectedOptions)];\r\n\r\n    if (uniqueChars.length === 1) {\r\n      let value = uniqueChars[0];\r\n      const formdata = new FormData();\r\n      formdata.append(\"state_id\", value);\r\n      axiosConfig\r\n        .post(`/getcity`, formdata)\r\n        .then((res) => {\r\n          setCityList(res?.data?.cities);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setCityList([]);\r\n    }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem) => {\r\n    // debugger;\r\n    // setselectedOptions(\"\");\r\n    // console.log(selectedList);\r\n    // setmultiSelect(selectedList);\r\n\r\n    let arr = selectedList.map((ele) => ele.id);\r\n    // console.log(arr);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    console.log(removedItem);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add here</h1>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"container \"></div>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> Select Role*</Label>\r\n                    <CustomInput\r\n                      required\r\n                      id=\"AssignRole\"\r\n                      type=\"select\"\r\n                      name=\"AssignRole\"\r\n                      value={AssignRole}\r\n                      // onChange={changeHandler}\r\n                      onChange={(e) => setAssignRole(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n\r\n                      {productName &&\r\n                        productName?.map((value, index) => (\r\n                          <option key={index} value={value?.id}>\r\n                            {value?.role}\r\n                          </option>\r\n                        ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>First Name *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"firstname\"\r\n                      value={firstname}\r\n                      onChange={(e) => setFirstname(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Last Name *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"lastname\"\r\n                      value={Lastname}\r\n                      onChange={(e) => setLastname(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>UserName *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"UserName\"\r\n                      value={UserName}\r\n                      onChange={(e) => setUserName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      maxLength={12}\r\n                      onKeyDown={(e) =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      size={10}\r\n                      min={0}\r\n                      placeholder=\"+910000000000\"\r\n                      name=\"Mobile_no\"\r\n                      value={Mobile_no}\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        // Use regular expression to allow only numbers\r\n                        const numericValue = value.replace(/\\D/g, \"\");\r\n\r\n                        setMobile_no(numericValue);\r\n                      }}\r\n                      // onChange={(e) => setMobile_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"email\"\r\n                      placeholder=\"abcd@gmail.com...\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => setemail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => setpassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Phone Number </Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      onKeyDown={(e) =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      min={0}\r\n                      maxLength={12}\r\n                      size={10}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Phone_no\"\r\n                      value={Phone_no}\r\n                      onChange={(e) => setPhone_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Type</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Companytype\"\r\n                      name=\"Companytype\"\r\n                      value={Companytype}\r\n                      onChange={(e) => setCompanytype(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>GSTIN</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter GSTIN No.\"\r\n                      name=\"GSTIN\"\r\n                      value={GSTIN}\r\n                      onChange={(e) => setGSTIN(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Row></Row>\r\n                    <Label for=\"cars\"> State *</Label>\r\n                    {AssignRole === \"supplier\" ? (\r\n                      <>\r\n                        <Multiselect\r\n                          required\r\n                          showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={StateList} // Options to display in the dropdown\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={onSelect1} // Function will trigger on select event\r\n                          onRemove={onRemove1} // Function will trigger on remove event\r\n                          displayValue=\"state_title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <select\r\n                          required\r\n                          name=\"SelectedState\"\r\n                          value={SelectedState}\r\n                          onChange={(e) => {\r\n                            const formdata = new FormData();\r\n                            setSelectedState(e.target.value);\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                setCityList(res?.data?.cities);\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {StateList &&\r\n                            StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </>\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>City*</Label>\r\n                  <Multiselect\r\n                    required\r\n                    // singleSelect\r\n                    selectionLimit={1}\r\n                    options={CityList} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue} // Preselected value to persist in dropdown\r\n                    onSelect={onSelect} // Function will trigger on select event\r\n                    onRemove={onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                  />\r\n                </Col>\r\n\r\n                {AssignRole === \"supplier\" ? (\r\n                  <>\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>Place of Supply</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Place_of_Supply\"\r\n                          name=\"Place_of_Supply\"\r\n                          value={Place_of_Supply}\r\n                          onChange={(e) => setPlace_of_Supply(e.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Postal Code</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Postal code\"\r\n                      name=\"postalcode\"\r\n                      value={Postalcode}\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        // Use regular expression to allow only numbers\r\n                        const numericValue = value.replace(/\\D/g, \"\");\r\n                        setPostalCode(numericValue);\r\n                      }}\r\n                      // onChange={(e) => setPostalCode(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              {/* <Row>\r\n                <Col className=\"mt-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <h4 className=\"mt-5 pb-2\">Billing Address :</h4>\r\n\r\n                  <Col className=\"\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"B_Country\"\r\n                        value={B_Country}\r\n                        onChange={(e) => setB_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"B_State\"\r\n                        value={B_State}\r\n                        onChange={(e) => {\r\n                          console.log(e.target.value);\r\n                          setB_State(e.target.value);\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              setCityList(res?.data?.cities);\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"cars\">Choose City</Label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_City\"\r\n                          value={B_City}\r\n                          onChange={(e) => setB_City(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          {CityList &&\r\n                            CityList?.map((value, index) => (\r\n                              <option key={index} value={value?.id}>\r\n                                {value?.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"B_Street\"\r\n                        value={B_Street}\r\n                        onChange={(e) => setB_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        placeholder=\"Enter PinCode\"\r\n                        name=\"B_PinCode\"\r\n                        value={B_PinCode}\r\n                        onChange={(e) => setB_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <hr />\r\n                  <Row>\r\n                    <Col className=\"ml-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Input\r\n                        name=\"check\"\r\n                        onChange={(e) => {\r\n                          handleMatchaddress(e, e.target.checked);\r\n                        }}\r\n                        style={{\r\n                          height: \"15px\",\r\n                          width: \"20px\",\r\n                        }}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    </Col>\r\n                    <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"ml-3\">\r\n                      <h5> Same as Billing Address </h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_Country\"\r\n                        disabled={checkbox ? true : false}\r\n                        value={S_Country}\r\n                        onChange={(e) => setS_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"S_State\"\r\n                        value={S_State}\r\n                        onChange={(e) => {\r\n                          setS_State(e.target.value);\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              console.log(res?.data?.cities);\r\n                              setCityList(res?.data?.cities);\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <Label for=\"cars\">Choose City</Label>\r\n\r\n                    <FormGroup>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_City\"\r\n                        value={S_City}\r\n                        onChange={(e) => setS_City(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select City--</option>\r\n                        {CityList &&\r\n                          CityList?.map((value, index) => (\r\n                            <option key={index} value={value?.id}>\r\n                              {value?.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"S_Street\"\r\n                        value={S_Street}\r\n                        onChange={(e) => setS_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"number\"\r\n                        placeholder=\"Enter PinCode\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        name=\"S_PinCode\"\r\n                        value={S_PinCode}\r\n                        onChange={(e) => setS_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row className=\"mt-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => setstatus(e.target.value)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n"],"sourceRoot":""}